{
	"info": {
		"_postman_id": "9b4d80cd-8619-48a0-bf23-6fafb5f7e264",
		"name": "Challenge Binar Gold(Web)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13579232",
		"_collection_link": "https://www.postman.com/navigation-explorer-78477730/workspace/qa-gold-challenge-vatsa/collection/13579232-9b4d80cd-8619-48a0-bf23-6fafb5f7e264?action=share&source=collection_link&creator=13579232"
	},
	"item": [
		{
			"name": "Update Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"David Doa\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"function generateRandomName() {",
							"    const firstNames = [\"semi\", \"Alice\", \"yanto\", \"Jessica\", \"David\"]; // Add more first names as needed",
							"    const lastNames = [\"yonex\", \"willson\", \"Doa\", \"Evellyn\", \"Fernando\"]; // Add more last names as needed",
							"    const randomFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
							"    const randomLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
							"    return `${randomFirstName} ${randomLastName}`;",
							"}",
							"const randomName = generateRandomName();",
							"// Store the random name in an environment variable",
							"pm.environment.set('random_name1', randomName);",
							"",
							"",
							"// Generate a random email address",
							"function generateRandomEmail() {",
							"    const username = Math.random().toString(36).substring(2, 12); // Generate a random username",
							"    const domain = 'example.com'; // Replace 'example.com' with your desired domain",
							"    return `${username}@${domain}`;",
							"}",
							"const randomEmail = generateRandomEmail();",
							"// Store the random email in an environment variable",
							"pm.environment.set('random_email1', randomEmail);",
							"",
							"// Generate a random-looking Indonesian phone number",
							"function generateRandomIndonesianPhoneNumber() {",
							"    const prefixOptions = [\"0811\", \"0812\", \"0813\", \"0821\", \"0822\", \"0823\", \"0851\", \"0852\", \"0853\", \"0814\", \"0815\", \"0816\", \"0855\"];",
							"    const selectedPrefix = prefixOptions[Math.floor(Math.random() * prefixOptions.length)];",
							"    const remainingDigits = Math.floor(Math.random() * 1000000000).toString().padStart(9, '0');",
							"    return selectedPrefix + remainingDigits;",
							"}",
							"const randomIndonesianPhoneNumber = generateRandomIndonesianPhoneNumber();",
							"// Store the random Indonesian phone number in an environment variable",
							"pm.environment.set('random_indonesian_phone_number1', randomIndonesianPhoneNumber);",
							"",
							"// Generate a random-looking Indonesian address",
							"function generateRandomIndonesianAddress() {",
							"    const streets = [\"Jalan Merdeka\", \"Jalan Pahlawan\", \"Jalan Raya\", \"Jalan Cendrawasih\", \"Jalan Budi Utomo\", \"Jalan Diponegoro\"];",
							"    const cities = [\"Jakarta\", \"Surabaya\", \"Bandung\", \"Yogyakarta\", \"Medan\", \"Semarang\"];",
							"    const provinces = [\"Jakarta\", \"East Java\", \"West Java\", \"Yogyakarta\", \"North Sumatra\", \"Central Java\"];",
							"    ",
							"    const randomStreet = streets[Math.floor(Math.random() * streets.length)];",
							"    const randomCity = cities[Math.floor(Math.random() * cities.length)];",
							"    const randomProvince = provinces[Math.floor(Math.random() * provinces.length)];",
							"    ",
							"    return `${randomStreet}, ${randomCity}, ${randomProvince}`;",
							"}",
							"const randomIndonesianAddress = generateRandomIndonesianAddress();",
							"// Store the random Indonesian address in an environment variable",
							"pm.environment.set('random_indonesian_address', randomIndonesianAddress);",
							"// Extract the city from the generated address",
							"const city = randomIndonesianAddress.split(', ')[1];",
							"// Store the extracted city in an environment variable",
							"pm.environment.set('random_city1', city);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "user[name]",
							"value": "{{random_name1}}",
							"type": "text"
						},
						{
							"key": "user[phone_number",
							"value": "{{random_indonesian_phone_number1}}",
							"type": "text"
						},
						{
							"key": "user[address]",
							"value": "{{random_city1}}      ",
							"type": "text"
						},
						{
							"key": "user[city_id]",
							"value": "1",
							"type": "text"
						},
						{
							"key": "user[avatar]",
							"type": "file",
							"src": "ZQvgxgQEH/person avatar.png"
						}
					]
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/profiles.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"profiles.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"secondhand_email\", jsonData.user.email);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Messi Nurbaidah\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"function generateRandomName() {",
							"    const firstNames = [\"Joni\", \"Budi\", \"Siti\", \"Andi\", \"Messi\", \"Kevin\"]; // Add more first names as needed",
							"    const lastNames = [\"Pekerti\", \"Johnson\", \"Nurbaidah\", \"Gumilang\", \"William\"]; // Add more last names as needed",
							"    const randomFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
							"    const randomLastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
							"    return `${randomFirstName} ${randomLastName}`;",
							"}",
							"const randomName = generateRandomName();",
							"// Store the random name in an environment variable",
							"pm.environment.set('random_name1', randomName);",
							"",
							"",
							"// Generate random email",
							"function generateRandomEmail() {",
							"    const username = Math.random().toString(36).substring(2, 12); // Generate a random username",
							"    const domain = 'example.com'; // Replace 'example.com' with your desired domain",
							"    return `${username}@${domain}`;",
							"}",
							"const randomEmail = generateRandomEmail();",
							"// Store the random email in an environment variable",
							"pm.environment.set('random_email1', randomEmail);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user\": {\n    \"name\": \"{{random_name1}}\",\n    \"email\": \"{{random_email1}}\",\n    \"password\": \"shrevatz\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/users.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"users.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Alice yonex\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user\": {\n    \"email\": \"{{secondhand_email}}\",\n    \"password\": \"shrevatz\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/users/sign_in.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"users",
						"sign_in.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Hobi\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "base",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/categories.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"categories.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Kendaraan\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"category\": {\n    \"id\": 22,\n    \"name\": \"Spriggan\",\n    \"url\": \"http://www.example.com/categories/22\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/categories/2.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"categories",
						"2.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Offer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"initiated\");",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI4NzI3NyIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY5ODk5NzA5MiwiZXhwIjoxNzAwMjA2NjkyLCJqdGkiOiJkY2RkZWM2YS04N2ZhLTQ3YTUtOGYxYS02YmM4Y2MyMDlmMTQifQ.DynA-cWkjADXtk9wP3qeeIU97h266luhCVbxniUcn8U",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"offer\": {\n    \"price\": 1000,\n    \"to_id\": 87447,\n    \"product_id\": 51533\n  }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/offers.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"offers.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Offers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"tas murah\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/products.json?page=1&category_id=1&user_id=87448",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"products.json"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "category_id",
							"value": "1"
						},
						{
							"key": "user_id",
							"value": "87448"
						},
						{
							"key": null,
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Offer",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/offers/51533.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"offers",
						"51533.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"0821273529670\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI4NzE4NSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY5ODkxNDkwMCwiZXhwIjoxNzAwMTI0NTAwLCJqdGkiOiIzMzAzZWQ1NS04YTY0LTQ3YzYtYTVhMC0zZDZkMzNkMGE2NTIifQ.tvhUCya8rIWoBQc0XkwxCuLtBOtJBYS-e7aHScuW8KA",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": " ",
							"type": "text",
							"disabled": true
						},
						{
							"key": "product[name]",
							"value": "tas batman    ",
							"type": "text"
						},
						{
							"key": "product[price]",
							"value": "10000 ",
							"type": "text"
						},
						{
							"key": "product[description]",
							"value": "tas murah   ",
							"type": "text"
						},
						{
							"key": "product[status]",
							"value": "published",
							"type": "text"
						},
						{
							"key": "product[category_id]",
							"value": "1",
							"type": "text"
						},
						{
							"key": "product[image]",
							"type": "file",
							"src": "VL_bHwdXB/person avatar.png"
						}
					]
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/products.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"products.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Anak orang\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/products.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"products.json"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"disabled": true
						},
						{
							"key": "category_id",
							"value": "1",
							"disabled": true
						},
						{
							"key": "user_id",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Anak orang nemu di anime\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/products/27.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"products",
						"27.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"David yonex\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "product[name]",
							"value": "test the data   ",
							"type": "text"
						},
						{
							"key": "product[name]",
							"value": "tas batman      ",
							"type": "text"
						},
						{
							"key": "product[price]",
							"value": "20000     ",
							"type": "text"
						},
						{
							"key": "product[description]",
							"value": "tas murah",
							"type": "text"
						},
						{
							"key": "product[status]",
							"value": "published",
							"type": "text"
						},
						{
							"key": "product[category_id]",
							"value": "1",
							"type": "text"
						},
						{
							"key": "product[images][]",
							"type": "file",
							"src": "jKRJDJf8y/tas.jpeg"
						}
					]
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/products/:id ",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"products",
						":id "
					],
					"variable": [
						{
							"key": "id ",
							"value": "51648.json"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Jessica willson\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI4NzE4NSIsInNjcCI6InVzZXIiLCJhdWQiOm51bGwsImlhdCI6MTY5ODkxNDkwMCwiZXhwIjoxNzAwMTI0NTAwLCJqdGkiOiIzMzAzZWQ1NS04YTY0LTQ3YzYtYTVhMC0zZDZkMzNkMGE2NTIifQ.tvhUCya8rIWoBQc0XkwxCuLtBOtJBYS-e7aHScuW8KA",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://secondhand.binaracademy.org/profiles.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"profiles.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://secondhand.binaracademy.org/products/79.json",
					"protocol": "https",
					"host": [
						"secondhand",
						"binaracademy",
						"org"
					],
					"path": [
						"products",
						"79.json"
					]
				}
			},
			"response": []
		}
	]
}